{"version":3,"sources":["file:///C:/Users/trung/Desktop/Subject/cong-cu-moi-truong-phat-trien-phan-mem/game_doi_khang_multiphayer_socket_cocos_creator_nodejs/assets/KylinsEasyController/CharacterController.ts"],"names":["_decorator","Component","v3","RigidBody","Vec3","find","Camera","SkeletalAnimation","AnimationClip","Collider","EasyController","EasyControllerEvent","ccclass","property","v3_1","CharacterController","_curJumpTimes","_rigidBody","_isMoving","_velocityScale","_isInTheAir","_curentVerticalVelocity","_anim","_tmp","start","mainCamera","getComponent","node","clipArr","idleAnimClip","moveAnimClip","jumpBeginAnimClip","jumpLoopAnimClip","jumpLandAnimClip","i","length","clip","getState","name","addClip","play","on","MOVEMENT","onMovement","MOVEMENT_STOP","onMovementRelease","JUMP","onJump","myCollider","target","otherCollider","selfCollider","onLand","onDestroy","off","update","deltaTime","set","forward","multiplyScalar","velocity","getLinearVelocity","y","setLinearVelocity","add","position","setPosition","state","isPlaying","current","duration","crossFade","oldPos","nextY","x","z","degree","offset","cameraRotationY","eulerAngles","setRotationFromEuler","speed","ZERO","maxJumpTimes","jumpVelocity"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, v3, RigidBody, Vec3, find, Camera, SkeletalAnimation, AnimationClip, Collider, ICollisionEvent } from 'cc';\r\nimport { EasyController, EasyControllerEvent } from './EasyController';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst v3_1 = v3();\r\n\r\n@ccclass('CharacterController')\r\nexport class CharacterController extends Component {\r\n\r\n    @property(Camera)\r\n    mainCamera: Camera;\r\n\r\n    @property\r\n    velocity = 1.0;\r\n\r\n    @property\r\n    jumpVelocity = 1.0;\r\n\r\n    @property\r\n    maxJumpTimes: number = 0;\r\n    private _curJumpTimes: number = 0;\r\n\r\n    @property(AnimationClip)\r\n    idleAnimClip: AnimationClip;\r\n\r\n    @property(AnimationClip)\r\n    moveAnimClip: AnimationClip;\r\n\r\n    @property(AnimationClip)\r\n    jumpBeginAnimClip: AnimationClip;\r\n\r\n    @property(AnimationClip)\r\n    jumpLoopAnimClip: AnimationClip;\r\n\r\n    @property(AnimationClip)\r\n    jumpLandAnimClip: AnimationClip;\r\n\r\n    _rigidBody: RigidBody;\r\n    _isMoving: boolean = false;\r\n    _velocityScale: number = 1.0;\r\n\r\n    _isInTheAir: boolean = false;\r\n    _curentVerticalVelocity: number = 0.0;\r\n\r\n    private _anim: SkeletalAnimation;\r\n\r\n    start() {\r\n        if (!this.mainCamera) {\r\n            this.mainCamera = find('Main Camera')?.getComponent(Camera);\r\n        }\r\n        this._rigidBody = this.node.getComponent(RigidBody);\r\n        this._anim = this.node.getComponent(SkeletalAnimation);\r\n        if (this._anim) {\r\n            let clipArr = [\r\n                this.idleAnimClip,\r\n                this.moveAnimClip,\r\n                this.jumpBeginAnimClip,\r\n                this.jumpLoopAnimClip,\r\n                this.jumpLandAnimClip\r\n            ];\r\n            for (let i = 0; i < clipArr.length; ++i) {\r\n                let clip = clipArr[i];\r\n                if (clip) {\r\n                    if (!this._anim.getState(clip.name)) {\r\n                        this._anim.addClip(clip);\r\n                    }\r\n                }\r\n            }\r\n            if (this.idleAnimClip) {\r\n                this._anim.play(this.idleAnimClip.name);\r\n            }\r\n        }\r\n\r\n        EasyController.on(EasyControllerEvent.MOVEMENT, this.onMovement, this);\r\n        EasyController.on(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\r\n        EasyController.on(EasyControllerEvent.JUMP, this.onJump, this);\r\n\r\n        let myCollider = this.getComponent(Collider);\r\n        myCollider.on('onCollisionEnter',(target:ICollisionEvent)=>{\r\n            if(target.otherCollider != target.selfCollider){\r\n                this.onLand();\r\n            }\r\n        });\r\n    }\r\n\r\n    onDestroy() {\r\n        EasyController.off(EasyControllerEvent.MOVEMENT, this.onMovement, this);\r\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onMovementRelease, this);\r\n        EasyController.off(EasyControllerEvent.MOVEMENT_STOP, this.onJump, this);\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this._isMoving) {\r\n            this._tmp.set(this.node.forward);\r\n            this._tmp.multiplyScalar(-1.0);\r\n            this._tmp.multiplyScalar(this.velocity * this._velocityScale);\r\n            if (this._rigidBody) {\r\n                this._rigidBody.getLinearVelocity(v3_1);\r\n                this._tmp.y = v3_1.y;\r\n                this._rigidBody.setLinearVelocity(this._tmp);\r\n            }\r\n            else {\r\n                this._tmp.multiplyScalar(deltaTime);\r\n                this._tmp.add(this.node.position);\r\n                this.node.setPosition(this._tmp);\r\n            }\r\n        }\r\n\r\n        if (this._isInTheAir) {\r\n            if(this.jumpBeginAnimClip && this._anim){\r\n                let state = this._anim.getState(this.jumpBeginAnimClip.name);\r\n                if(state.isPlaying && state.current >= state.duration){\r\n                    if(this.jumpLoopAnimClip){\r\n                        this._anim.crossFade(this.jumpLoopAnimClip.name);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!this._rigidBody){\r\n                this._curentVerticalVelocity -= 9.8 * deltaTime;\r\n            \r\n                let oldPos = this.node.position;\r\n                let nextY = oldPos.y + this._curentVerticalVelocity * deltaTime;\r\n                if (nextY <= 0) {\r\n                    this.onLand();\r\n                    nextY = 0.0;\r\n                }\r\n                this.node.setPosition(oldPos.x, nextY, oldPos.z);\r\n            }\r\n        }\r\n    }\r\n\r\n    onLand(){\r\n        this._isInTheAir = false;\r\n        this._curentVerticalVelocity = 0.0;\r\n        this._curJumpTimes = 0;\r\n        if (this.moveAnimClip) {\r\n            if(this._isMoving){\r\n                this._anim.crossFade(this.moveAnimClip.name, 0.5);\r\n            }\r\n            else{\r\n                this._anim.crossFade(this.idleAnimClip.name, 0.5);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _tmp = v3();\r\n    onMovement(degree: number, offset: number) {\r\n        let cameraRotationY = 0;\r\n        if (this.mainCamera) {\r\n            cameraRotationY = this.mainCamera.node.eulerAngles.y;\r\n        }\r\n        this._velocityScale = offset;\r\n        //2D界面是 正X 为 0， 3D场景是 正前方为0，所以需要 - 90 度。（顺时针转90度）\r\n        this._tmp.set(0, cameraRotationY + degree - 90 + 180, 0);\r\n        this.node.setRotationFromEuler(this._tmp);\r\n        if (this._anim) {\r\n            if (!this._isMoving && !this._isInTheAir) {\r\n                if (this.moveAnimClip) {\r\n                    this._anim.crossFade(this.moveAnimClip.name, 0.5);\r\n                }\r\n            }\r\n            if (this.moveAnimClip) {\r\n                this._anim.getState(this.moveAnimClip.name).speed = this._velocityScale;\r\n            }\r\n        }\r\n        this._isMoving = true;\r\n\r\n    }\r\n    onMovementRelease() {\r\n        if (!this._isInTheAir && this.idleAnimClip) {\r\n            this._anim?.crossFade(this.idleAnimClip.name, 0.5);\r\n        }\r\n        this._isMoving = false;\r\n        if (this._rigidBody) {\r\n            this._rigidBody.setLinearVelocity(Vec3.ZERO);\r\n        }\r\n    }\r\n\r\n    onJump() {\r\n        if (this._curJumpTimes >= this.maxJumpTimes) {\r\n            return;\r\n        }\r\n        if(this._curJumpTimes == 0 || true){\r\n            if(this.jumpBeginAnimClip){\r\n                this._anim?.crossFade(this.jumpBeginAnimClip.name);\r\n            }\r\n        }\r\n        this._curJumpTimes++;\r\n        if(this._rigidBody){\r\n            this._rigidBody.getLinearVelocity(v3_1);\r\n            v3_1.y = this.jumpVelocity;\r\n            this._rigidBody.setLinearVelocity(v3_1);\r\n        }\r\n        else{\r\n            this._curentVerticalVelocity = this.jumpVelocity;\r\n        }\r\n        \r\n        this._isInTheAir = true;\r\n    }\r\n}\r\n\r\n"]}